<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        https://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--配置事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource"/>
    </bean>
    <!--配置事务通知-->
    <tx:advice id="tx-advice" transaction-manager="dataSourceTransactionManager">
        <!--配置事务属性-->
        <tx:attributes>
            <!--将查询方法设置为只读-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="query*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="count*" read-only="true"/>
            <tx:method name="login" read-only="true"/>
            <!--给增删改方法配置属性-->
            <!-- propagation：配置传播行为，REQUIRES_NEW表示必须工作在自己新开的事务中，不受其他事务回滚影响 -->
            <!-- rollback-for：配置回滚的异常，默认是根据运行时异常回滚，为了抛出编译时异常也回滚，设置为java.lang.Exception -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
        </tx:attributes>
    </tx:advice>
    <!--aop配置-->
    <aop:config>
        <!--切入点表达式-->
        <aop:pointcut id="txPointCut" expression="execution(* *..*Service.*(..))"/>
        <aop:advisor advice-ref="tx-advice" pointcut-ref="txPointCut"/>
    </aop:config>

    <!--基于注解的声明式事务，@Transactional 可以用于类上，也可以用于方法上-->
    <!--配置了它就不需要上面 xml 配置的事务了-->
    <!--<tx:annotation-driven transaction-manager="dataSourceTransactionManager"/>-->
</beans>